

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."energy" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "order_index" numeric NOT NULL
);


ALTER TABLE "public"."energy" OWNER TO "postgres";


COMMENT ON TABLE "public"."energy" IS 'universal energy';



ALTER TABLE "public"."energy" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."energy_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."goal_stage" (
    "id" bigint NOT NULL,
    "name" "text",
    "order_index" numeric
);


ALTER TABLE "public"."goal_stage" OWNER TO "postgres";


COMMENT ON TABLE "public"."goal_stage" IS 'stages of goals';



ALTER TABLE "public"."goal_stage" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."goal_stage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."goals" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "is_current" boolean DEFAULT false NOT NULL,
    "priority_id" bigint NOT NULL,
    "energy_id" bigint NOT NULL,
    "stage_id" bigint NOT NULL,
    "monument_id" bigint NOT NULL,
    "Title" "text" DEFAULT 'NEW GOAL'::"text" NOT NULL,
    "user_id" "uuid" NOT NULL
);


ALTER TABLE "public"."goals" OWNER TO "postgres";


COMMENT ON TABLE "public"."goals" IS 'universal goals';



ALTER TABLE "public"."goals" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."goals_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."habit_types" (
    "id" bigint NOT NULL,
    "name" "text"
);


ALTER TABLE "public"."habit_types" OWNER TO "postgres";


COMMENT ON TABLE "public"."habit_types" IS 'types of recurring events';



ALTER TABLE "public"."habit_types" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."habit_types_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."habits" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "recurrence" bigint,
    "Title" "text",
    "type_id" bigint DEFAULT '1'::bigint,
    "user_id" "uuid"
);


ALTER TABLE "public"."habits" OWNER TO "postgres";


COMMENT ON TABLE "public"."habits" IS 'universal habits';



ALTER TABLE "public"."habits" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."habits_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."monument_skills" (
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "monument_id" bigint,
    "skill_id" bigint
);


ALTER TABLE "public"."monument_skills" OWNER TO "postgres";


COMMENT ON TABLE "public"."monument_skills" IS 'join table for monuments and skills';



CREATE TABLE IF NOT EXISTS "public"."monuments" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "Title" "text",
    "description" "text",
    "user_id" "uuid"
);


ALTER TABLE "public"."monuments" OWNER TO "postgres";


COMMENT ON TABLE "public"."monuments" IS 'universal monuments';



ALTER TABLE "public"."monuments" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."monuments_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."priority" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "order_index" numeric NOT NULL
);


ALTER TABLE "public"."priority" OWNER TO "postgres";


COMMENT ON TABLE "public"."priority" IS 'universal priority scale';



ALTER TABLE "public"."priority" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."priority_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid",
    "username" "text" NOT NULL
);


ALTER TABLE "public"."profiles" OWNER TO "postgres";


COMMENT ON TABLE "public"."profiles" IS 'universal profile control';



ALTER TABLE "public"."profiles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."profiles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."project_stage" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "order_index" numeric NOT NULL
);


ALTER TABLE "public"."project_stage" OWNER TO "postgres";


COMMENT ON TABLE "public"."project_stage" IS 'stages of projects';



ALTER TABLE "public"."project_stage" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."project_stage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."projects" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "energy_id" bigint,
    "priority_id" bigint,
    "goal_id" bigint,
    "stage_id" bigint NOT NULL,
    "Title" "text" DEFAULT 'NEW PROJECT'::"text" NOT NULL,
    "user_id" "uuid"
);


ALTER TABLE "public"."projects" OWNER TO "postgres";


COMMENT ON TABLE "public"."projects" IS 'universal projects';



ALTER TABLE "public"."projects" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."projects_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."skills" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "Title" "text",
    "cat_id" bigint,
    "user_id" "uuid"
);


ALTER TABLE "public"."skills" OWNER TO "postgres";


COMMENT ON TABLE "public"."skills" IS 'universal skills';



ALTER TABLE "public"."skills" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."skills_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."task_stage" (
    "id" bigint NOT NULL,
    "name" "text",
    "order_index" numeric
);


ALTER TABLE "public"."task_stage" OWNER TO "postgres";


COMMENT ON TABLE "public"."task_stage" IS 'stages of tasks';



ALTER TABLE "public"."task_stage" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."task_stage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tasks" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "priority_id" bigint DEFAULT '2'::bigint,
    "energy_id" bigint DEFAULT '2'::bigint,
    "stage_id" bigint DEFAULT '1'::bigint NOT NULL,
    "project_id" bigint NOT NULL,
    "Title" "text" DEFAULT 'NEW TASK'::"text" NOT NULL,
    "user_id" "uuid"
);


ALTER TABLE "public"."tasks" OWNER TO "postgres";


COMMENT ON TABLE "public"."tasks" IS 'universal tasks';



ALTER TABLE "public"."tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."energy"
    ADD CONSTRAINT "energy_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."energy"
    ADD CONSTRAINT "energy_pkey" PRIMARY KEY ("id", "name", "order_index");



ALTER TABLE ONLY "public"."goal_stage"
    ADD CONSTRAINT "goal_stage_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."goals"
    ADD CONSTRAINT "goals_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."habit_types"
    ADD CONSTRAINT "habit_types_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."habits"
    ADD CONSTRAINT "habits_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."monuments"
    ADD CONSTRAINT "monuments_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."monument_skills"
    ADD CONSTRAINT "monuments_skills_pkey" PRIMARY KEY ("user_id");



ALTER TABLE ONLY "public"."priority"
    ADD CONSTRAINT "priority_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."priority"
    ADD CONSTRAINT "priority_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."priority"
    ADD CONSTRAINT "priority_pkey" PRIMARY KEY ("id", "name", "order_index");



ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_username_key" UNIQUE ("username");



ALTER TABLE ONLY "public"."project_stage"
    ADD CONSTRAINT "project_stage_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."project_stage"
    ADD CONSTRAINT "project_stage_order_index_key" UNIQUE ("order_index");



ALTER TABLE ONLY "public"."project_stage"
    ADD CONSTRAINT "project_stage_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."skills"
    ADD CONSTRAINT "skills_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."task_stage"
    ADD CONSTRAINT "task_stage_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."goals"
    ADD CONSTRAINT "goals_energy_id_fkey" FOREIGN KEY ("energy_id") REFERENCES "public"."energy"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."goals"
    ADD CONSTRAINT "goals_monument_id_fkey" FOREIGN KEY ("monument_id") REFERENCES "public"."monuments"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."goals"
    ADD CONSTRAINT "goals_priority_id_fkey" FOREIGN KEY ("priority_id") REFERENCES "public"."priority"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."goals"
    ADD CONSTRAINT "goals_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "public"."goal_stage"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."goals"
    ADD CONSTRAINT "goals_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."habits"
    ADD CONSTRAINT "habits_type_id_fkey" FOREIGN KEY ("type_id") REFERENCES "public"."habit_types"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."habits"
    ADD CONSTRAINT "habits_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."monument_skills"
    ADD CONSTRAINT "monuments_skills_monument_id_fkey" FOREIGN KEY ("monument_id") REFERENCES "public"."monuments"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."monument_skills"
    ADD CONSTRAINT "monuments_skills_skill_id_fkey" FOREIGN KEY ("skill_id") REFERENCES "public"."skills"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."monument_skills"
    ADD CONSTRAINT "monuments_skills_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE SET NULL;



ALTER TABLE ONLY "public"."monuments"
    ADD CONSTRAINT "monuments_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE CASCADE;



ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_energy_id_fkey" FOREIGN KEY ("energy_id") REFERENCES "public"."energy"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_goal_id_fkey" FOREIGN KEY ("goal_id") REFERENCES "public"."goals"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_priority_id_fkey" FOREIGN KEY ("priority_id") REFERENCES "public"."priority"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "public"."project_stage"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."projects"
    ADD CONSTRAINT "projects_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE CASCADE;



ALTER TABLE ONLY "public"."skills"
    ADD CONSTRAINT "skills_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE CASCADE;



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_energy_id_fkey" FOREIGN KEY ("energy_id") REFERENCES "public"."energy"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_priority_id_fkey" FOREIGN KEY ("priority_id") REFERENCES "public"."priority"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_project_id_fkey" FOREIGN KEY ("project_id") REFERENCES "public"."projects"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_stage_id_fkey" FOREIGN KEY ("stage_id") REFERENCES "public"."task_stage"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;



ALTER TABLE ONLY "public"."tasks"
    ADD CONSTRAINT "tasks_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE CASCADE;



ALTER TABLE "public"."energy" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "energy_read_all" ON "public"."energy" FOR SELECT USING (true);



ALTER TABLE "public"."goal_stage" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "goal_stage_read_all" ON "public"."goal_stage" FOR SELECT USING (true);



ALTER TABLE "public"."goals" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "goals_delete_own" ON "public"."goals" FOR DELETE TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "goals_insert_own" ON "public"."goals" FOR INSERT TO "authenticated" WITH CHECK (("user_id" = "auth"."uid"()));



CREATE POLICY "goals_select_own" ON "public"."goals" FOR SELECT TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "goals_update_own" ON "public"."goals" FOR UPDATE TO "authenticated" USING (("user_id" = "auth"."uid"())) WITH CHECK (("user_id" = "auth"."uid"()));



ALTER TABLE "public"."habit_types" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "habit_types_read_all" ON "public"."habit_types" FOR SELECT USING (true);



ALTER TABLE "public"."habits" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "habits_delete_own" ON "public"."habits" FOR DELETE TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "habits_insert_guard" ON "public"."habits" FOR INSERT TO "authenticated" WITH CHECK ((("user_id" = "auth"."uid"()) AND (("type_id" IS NULL) OR (EXISTS ( SELECT 1
   FROM "public"."habit_types" "ht"
  WHERE ("ht"."id" = "habits"."type_id"))))));



CREATE POLICY "habits_select_own" ON "public"."habits" FOR SELECT TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "habits_update_guard" ON "public"."habits" FOR UPDATE TO "authenticated" USING (("user_id" = "auth"."uid"())) WITH CHECK ((("user_id" = "auth"."uid"()) AND (("type_id" IS NULL) OR (EXISTS ( SELECT 1
   FROM "public"."habit_types" "ht"
  WHERE ("ht"."id" = "habits"."type_id"))))));



ALTER TABLE "public"."monument_skills" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."monuments" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "monuments_delete_own" ON "public"."monuments" FOR DELETE TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "monuments_select_own" ON "public"."monuments" FOR SELECT TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "ms_delete_guard" ON "public"."monument_skills" FOR DELETE TO "authenticated" USING ((EXISTS ( SELECT 1
   FROM ("public"."monuments" "m"
     JOIN "public"."skills" "s" ON (("s"."id" = "monument_skills"."skill_id")))
  WHERE (("m"."id" = "monument_skills"."monument_id") AND ("m"."user_id" = "auth"."uid"()) AND ("s"."user_id" = "auth"."uid"())))));



CREATE POLICY "ms_insert_guard" ON "public"."monument_skills" FOR INSERT TO "authenticated" WITH CHECK ((EXISTS ( SELECT 1
   FROM ("public"."monuments" "m"
     JOIN "public"."skills" "s" ON (("s"."id" = "monument_skills"."skill_id")))
  WHERE (("m"."id" = "monument_skills"."monument_id") AND ("m"."user_id" = "auth"."uid"()) AND ("s"."user_id" = "auth"."uid"())))));



CREATE POLICY "ms_select_guard" ON "public"."monument_skills" FOR SELECT TO "authenticated" USING ((EXISTS ( SELECT 1
   FROM ("public"."monuments" "m"
     JOIN "public"."skills" "s" ON (("s"."id" = "monument_skills"."skill_id")))
  WHERE (("m"."id" = "monument_skills"."monument_id") AND ("m"."user_id" = "auth"."uid"()) AND ("s"."user_id" = "auth"."uid"())))));



CREATE POLICY "ms_update_guard" ON "public"."monument_skills" FOR UPDATE TO "authenticated" USING ((EXISTS ( SELECT 1
   FROM ("public"."monuments" "m"
     JOIN "public"."skills" "s" ON (("s"."id" = "monument_skills"."skill_id")))
  WHERE (("m"."id" = "monument_skills"."monument_id") AND ("m"."user_id" = "auth"."uid"()) AND ("s"."user_id" = "auth"."uid"()))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM ("public"."monuments" "m"
     JOIN "public"."skills" "s" ON (("s"."id" = "monument_skills"."skill_id")))
  WHERE (("m"."id" = "monument_skills"."monument_id") AND ("m"."user_id" = "auth"."uid"()) AND ("s"."user_id" = "auth"."uid"())))));



ALTER TABLE "public"."priority" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "priority_read_all" ON "public"."priority" FOR SELECT USING (true);



ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."project_stage" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "project_stage_read_all" ON "public"."project_stage" FOR SELECT USING (true);



ALTER TABLE "public"."projects" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "projects_delete_own" ON "public"."projects" FOR DELETE TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "projects_insert_guard" ON "public"."projects" FOR INSERT TO "authenticated" WITH CHECK ((("user_id" = "auth"."uid"()) AND (EXISTS ( SELECT 1
   FROM "public"."goals" "g"
  WHERE (("g"."id" = "projects"."goal_id") AND ("g"."user_id" = "auth"."uid"()))))));



CREATE POLICY "projects_select_own" ON "public"."projects" FOR SELECT TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "projects_update_guard" ON "public"."projects" FOR UPDATE TO "authenticated" USING (("user_id" = "auth"."uid"())) WITH CHECK ((("user_id" = "auth"."uid"()) AND (EXISTS ( SELECT 1
   FROM "public"."goals" "g"
  WHERE (("g"."id" = "projects"."goal_id") AND ("g"."user_id" = "auth"."uid"()))))));



ALTER TABLE "public"."skills" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "skills_delete_own" ON "public"."skills" FOR DELETE TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "skills_insert_own" ON "public"."skills" FOR INSERT TO "authenticated" WITH CHECK (("user_id" = "auth"."uid"()));



CREATE POLICY "skills_select_own" ON "public"."skills" FOR SELECT TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "skills_update_own" ON "public"."skills" FOR UPDATE TO "authenticated" USING (("user_id" = "auth"."uid"())) WITH CHECK (("user_id" = "auth"."uid"()));



ALTER TABLE "public"."task_stage" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "task_stage_read_all" ON "public"."task_stage" FOR SELECT USING (true);



ALTER TABLE "public"."tasks" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "tasks_delete_own" ON "public"."tasks" FOR DELETE TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "tasks_insert_guard" ON "public"."tasks" FOR INSERT TO "authenticated" WITH CHECK ((("user_id" = "auth"."uid"()) AND (EXISTS ( SELECT 1
   FROM "public"."projects" "p"
  WHERE (("p"."id" = "tasks"."project_id") AND ("p"."user_id" = "auth"."uid"()))))));



CREATE POLICY "tasks_select_own" ON "public"."tasks" FOR SELECT TO "authenticated" USING (("user_id" = "auth"."uid"()));



CREATE POLICY "tasks_update_guard" ON "public"."tasks" FOR UPDATE TO "authenticated" USING (("user_id" = "auth"."uid"())) WITH CHECK ((("user_id" = "auth"."uid"()) AND (EXISTS ( SELECT 1
   FROM "public"."projects" "p"
  WHERE (("p"."id" = "tasks"."project_id") AND ("p"."user_id" = "auth"."uid"()))))));





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."energy" TO "anon";
GRANT ALL ON TABLE "public"."energy" TO "authenticated";
GRANT ALL ON TABLE "public"."energy" TO "service_role";



GRANT ALL ON SEQUENCE "public"."energy_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."energy_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."energy_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."goal_stage" TO "anon";
GRANT ALL ON TABLE "public"."goal_stage" TO "authenticated";
GRANT ALL ON TABLE "public"."goal_stage" TO "service_role";



GRANT ALL ON SEQUENCE "public"."goal_stage_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."goal_stage_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."goal_stage_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."goals" TO "anon";
GRANT ALL ON TABLE "public"."goals" TO "authenticated";
GRANT ALL ON TABLE "public"."goals" TO "service_role";



GRANT ALL ON SEQUENCE "public"."goals_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."goals_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."goals_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."habit_types" TO "anon";
GRANT ALL ON TABLE "public"."habit_types" TO "authenticated";
GRANT ALL ON TABLE "public"."habit_types" TO "service_role";



GRANT ALL ON SEQUENCE "public"."habit_types_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."habit_types_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."habit_types_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."habits" TO "anon";
GRANT ALL ON TABLE "public"."habits" TO "authenticated";
GRANT ALL ON TABLE "public"."habits" TO "service_role";



GRANT ALL ON SEQUENCE "public"."habits_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."habits_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."habits_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."monument_skills" TO "anon";
GRANT ALL ON TABLE "public"."monument_skills" TO "authenticated";
GRANT ALL ON TABLE "public"."monument_skills" TO "service_role";



GRANT ALL ON TABLE "public"."monuments" TO "anon";
GRANT ALL ON TABLE "public"."monuments" TO "authenticated";
GRANT ALL ON TABLE "public"."monuments" TO "service_role";



GRANT ALL ON SEQUENCE "public"."monuments_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."monuments_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."monuments_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."priority" TO "anon";
GRANT ALL ON TABLE "public"."priority" TO "authenticated";
GRANT ALL ON TABLE "public"."priority" TO "service_role";



GRANT ALL ON SEQUENCE "public"."priority_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."priority_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."priority_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."profiles" TO "anon";
GRANT ALL ON TABLE "public"."profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."profiles" TO "service_role";



GRANT ALL ON SEQUENCE "public"."profiles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."profiles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."profiles_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."project_stage" TO "anon";
GRANT ALL ON TABLE "public"."project_stage" TO "authenticated";
GRANT ALL ON TABLE "public"."project_stage" TO "service_role";



GRANT ALL ON SEQUENCE "public"."project_stage_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."project_stage_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."project_stage_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."projects" TO "anon";
GRANT ALL ON TABLE "public"."projects" TO "authenticated";
GRANT ALL ON TABLE "public"."projects" TO "service_role";



GRANT ALL ON SEQUENCE "public"."projects_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."projects_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."projects_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."skills" TO "anon";
GRANT ALL ON TABLE "public"."skills" TO "authenticated";
GRANT ALL ON TABLE "public"."skills" TO "service_role";



GRANT ALL ON SEQUENCE "public"."skills_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."skills_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."skills_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."task_stage" TO "anon";
GRANT ALL ON TABLE "public"."task_stage" TO "authenticated";
GRANT ALL ON TABLE "public"."task_stage" TO "service_role";



GRANT ALL ON SEQUENCE "public"."task_stage_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."task_stage_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."task_stage_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tasks" TO "anon";
GRANT ALL ON TABLE "public"."tasks" TO "authenticated";
GRANT ALL ON TABLE "public"."tasks" TO "service_role";



GRANT ALL ON SEQUENCE "public"."tasks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tasks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tasks_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
