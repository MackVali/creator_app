{
  "meta": {
    "project": "CREATOR Productivity System",
    "date": "2025-08-17",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "CREATOR is a mobile-first productivity application designed to help creators, builders, students, and operators transform ideas into completed work. It employs a gamified system where users define skills, goals, projects, tasks, and schedule them in time windows to earn XP and progress long-term achievements called Monuments. The app focuses on a seamless workflow of capture, plan, schedule, execute, and reflect, encouraging structured momentum and rewarding consistency.",
  "core_goals": [
    "Provide a mobile-first, simple, and intuitive productivity system for creators and students.",
    "Enable structured momentum through defined skills, goals, projects, and tasks with scheduling capabilities.",
    "Gamify progress through XP, levels, and long-term Monuments to motivate users.",
    "Deliver a dynamic scheduler that recommends the best next tasks based on user energy, priority, and availability.",
    "Ensure seamless onboarding with automatic profile creation on first sign-in.",
    "Maintain security with role-based access control and Row Level Security (RLS) in the database.",
    "Offer public profile pages as an optional feature for user sharing."
  ],
  "key_features": [
    "Complete authentication system with Supabase Auth, including protected routes and role-based access control.",
    "User profile management with creation, editing, avatar support, and optional public profiles.",
    "Dashboard displaying todayâ€™s schedule, task progress, XP summary, skill levels, goals, and Monuments charge.",
    "Navigation system comprising a top navigation bar with avatar, sidebar, and mobile bottom navigation.",
    "Task and project management: create goals, projects, tasks, schedule tasks into time slots (Windows).",
    "Dynamic scheduling that suggests the next best task based on contextual rules of energy, priority, and time slots.",
    "Gamified XP and leveling mechanics linked to tasks, skills, and Monuments for long-term achievements.",
    "Reusable UI components leveraging Radix UI and Tailwind CSS for responsiveness and accessibility.",
    "Testing infrastructure using Vitest to maintain quality.",
    "Security and data integrity ensured by Supabase database integration with RLS and secure storage for avatars."
  ],
  "user_flow_summary": [
    "User signs in through the authentication system; if new, a profile is automatically created.",
    "User accesses the main dashboard showing today's scheduled tasks, XP progress, skills, and Monuments.",
    "User creates goals, links projects under those goals, and adds tasks within projects.",
    "User schedules tasks into specific Windows (time slots) using drag/drop and quick add features.",
    "Completing tasks awards XP to linked Skills and charges related Monuments, updating levels accordingly.",
    "Users can view and edit their profile with avatar support and optionally enable a public profile for sharing.",
    "Navigation flows support smooth transitions between authentication, dashboard, profile, goals, projects, tasks, skills, monuments, and scheduling screens."
  ],
  "validation_criteria": [
    "Authentication gate enforces access: unauthorized users redirected to /auth; authorized users redirected to /dashboard.",
    "Profile is created on the first sign-in and is editable only by its owner with proper RLS enforcement.",
    "Users can create and manage goals, projects, and tasks; completing tasks awards XP correctly to appropriate skills.",
    "Task scheduling into Windows updates today's view and supports drag-and-drop operations.",
    "Monument charge increases appropriately as tasks linked to their skills are completed.",
    "Top navigation avatar renders the uploaded user image and navigates to the user profile page on click.",
    "Performance targets met: dashboard first render under 1.5 seconds and route transitions under 400 milliseconds.",
    "Security measures including escaping user content and preventing external redirects are implemented.",
    "Accessibility compliance with labeled controls, keyboard focus states, and contrast adherence."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 15",
      "React 19",
      "Supabase",
      "Tailwind CSS",
      "Vitest",
      "Radix UI",
      "TanStack Query"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Complete authentication system with Supabase Auth, protected routes, and role-based access control",
        "files": [
          "components/auth/AuthForm.tsx",
          "components/auth/AuthLayout.tsx",
          "components/auth/AuthProvider.tsx",
          "components/auth/ProtectedRoute.tsx",
          "components/auth/RoleOption.tsx",
          "lib/auth.ts",
          "src/app/(public)/auth/page.tsx",
          "src/app/(public)/auth/callback/page.tsx",
          "src/app/(public)/auth/reset/page.tsx",
          "src/app/(public)/auth/update-password/page.tsx"
        ]
      },
      {
        "name": "Profile Management",
        "description": "User profile creation, editing, and management with avatar support",
        "files": [
          "lib/db/profiles.ts",
          "lib/db.ts",
          "lib/hooks/useProfile.ts",
          "src/app/(app)/profile/page.tsx",
          "src/app/(app)/profile/ProfileContent.tsx",
          "src/app/(app)/profile/edit/page.tsx",
          "src/app/(app)/profile/edit/ProfileEditForm.tsx",
          "src/app/(app)/u/[username]/page.tsx",
          "src/app/(app)/u/[username]/PublicProfileContent.tsx"
        ]
      },
      {
        "name": "Dashboard",
        "description": "Main dashboard with level progress, skills, goals, and monuments",
        "files": [
          "src/app/(app)/dashboard/page.tsx",
          "src/app/(app)/dashboard/DashboardClient.tsx",
          "components/ui/LevelBanner.tsx",
          "components/ui/MonumentContainer.tsx",
          "components/ui/Section.tsx",
          "components/ui/SkillPill.tsx",
          "components/ui/GoalsCard.tsx"
        ]
      },
      {
        "name": "Navigation System",
        "description": "Top navigation bar, sidebar, and bottom navigation for mobile",
        "files": [
          "components/TopNav.tsx",
          "components/TopNavAvatar.tsx",
          "components/sidebar.tsx",
          "components/mobile-nav.tsx",
          "components/BottomNav.tsx"
        ]
      },
      {
        "name": "Database Integration",
        "description": "Supabase database integration with profiles, authentication, and storage",
        "files": [
          "lib/supabase.ts",
          "lib/supabase-server.ts",
          "lib/db/profiles.ts",
          "lib/db.ts",
          "supabase/config.toml",
          "supabase/migrations/"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components built with Radix UI and Tailwind CSS",
        "files": [
          "components/ui/button.tsx",
          "components/ui/card.tsx",
          "components/ui/input.tsx",
          "components/ui/avatar.tsx",
          "components/ui/badge.tsx",
          "components/ui/dropdown-menu.tsx",
          "components/ui/sheet.tsx",
          "components/ui/toast.tsx"
        ]
      },
      {
        "name": "Protected Routes",
        "description": "Middleware and route protection for authenticated users",
        "files": [
          "src/middleware.ts",
          "components/auth/ProtectedRoute.tsx",
          "components/ProfileProvider.tsx"
        ]
      },
      {
        "name": "Testing Infrastructure",
        "description": "Vitest testing setup with test utilities and examples",
        "files": [
          "vitest.config.ts",
          "vitest.jsdom.config.ts",
          "vitest.setup.ts",
          "test/env.spec.ts",
          "test/utils/supabaseAdmin.ts"
        ]
      }
    ]
  }
}
